kotlin version: 2.0.0
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: /Users/sushil/Documents/Projects/AndroidStudioProjects/FetchList/itemlist/src/main/java/com/sukajee/itemlist/presentation/ItemsScreen.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:50)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:236)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:65)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:52)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:38)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:29)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:16)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.generateCodeFromIr(jvmCompilerPipeline.kt:241)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipeline.kt:140)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:155)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:50)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:104)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:48)
	at org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:453)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:62)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:301)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:129)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:676)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1661)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN FUNCTION_FOR_DEFAULT_PARAMETER name:ItemsScreenRoot$default visibility:public modality:FINAL <> (modifier:androidx.compose.ui.Modifier?, viewModel:com.sukajee.itemlist.presentation.ItemsViewModel?, $mask0:kotlin.Int, $handler:kotlin.Any?) returnType:kotlin.Unit
  annotations:
    Composable
  VALUE_PARAMETER name:modifier index:0 type:androidx.compose.ui.Modifier? [assignable]
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=androidx.compose.ui.Modifier
  VALUE_PARAMETER name:viewModel index:1 type:com.sukajee.itemlist.presentation.ItemsViewModel? [assignable]
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=com.sukajee.itemlist.presentation.ItemsViewModel
  VALUE_PARAMETER MASK_FOR_DEFAULT_FUNCTION name:$mask0 index:2 type:kotlin.Int
  VALUE_PARAMETER METHOD_HANDLER_IN_DEFAULT_FUNCTION name:$handler index:3 type:kotlin.Any?
  BLOCK_BODY
    WHEN type=kotlin.Unit origin=null
      BRANCH
        if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
          $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
            arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
              $this: GET_VAR '$mask0: kotlin.Int declared in com.sukajee.itemlist.presentation.ItemsScreenKt.ItemsScreenRoot$default' type=kotlin.Int origin=null
              other: CONST Int type=kotlin.Int value=1
            arg1: CONST Int type=kotlin.Int value=0
        then: SET_VAR 'modifier: androidx.compose.ui.Modifier? [assignable] declared in com.sukajee.itemlist.presentation.ItemsScreenKt.ItemsScreenRoot$default' type=kotlin.Unit origin=EQ
          GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Modifier.Companion visibility:public [final,static]' type=androidx.compose.ui.Modifier.Companion origin=null
    WHEN type=kotlin.Unit origin=null
      BRANCH
        if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
          $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
            arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
              $this: GET_VAR '$mask0: kotlin.Int declared in com.sukajee.itemlist.presentation.ItemsScreenKt.ItemsScreenRoot$default' type=kotlin.Int origin=null
              other: CONST Int type=kotlin.Int value=2
            arg1: CONST Int type=kotlin.Int value=0
        then: SET_VAR 'viewModel: com.sukajee.itemlist.presentation.ItemsViewModel? [assignable] declared in com.sukajee.itemlist.presentation.ItemsScreenKt.ItemsScreenRoot$default' type=kotlin.Unit origin=EQ
          TYPE_OP type=com.sukajee.itemlist.presentation.ItemsViewModel origin=IMPLICIT_CAST typeOperand=com.sukajee.itemlist.presentation.ItemsViewModel
            CALL 'public final fun koinViewModel$default <T> (qualifier: org.koin.core.qualifier.Qualifier?, viewModelStoreOwner: androidx.lifecycle.ViewModelStoreOwner?, key: kotlin.String?, extras: androidx.lifecycle.viewmodel.CreationExtras?, scope: org.koin.core.scope.Scope?, parameters: kotlin.Function0<org.koin.core.parameter.ParametersHolder>?, $mask0: kotlin.Int, $handler: kotlin.Any?): T of org.koin.compose.viewmodel.ViewModelKt.koinViewModel$default [inline] declared in org.koin.compose.viewmodel.ViewModelKt' type=T of org.koin.compose.viewmodel.ViewModelKt.koinViewModel$default origin=DEFAULT_DISPATCH_CALL
              <T>: com.sukajee.itemlist.presentation.ItemsViewModel
              qualifier: COMPOSITE type=org.koin.core.qualifier.Qualifier? origin=DEFAULT_VALUE
                CONST Null type=org.koin.core.qualifier.Qualifier? value=null
              viewModelStoreOwner: COMPOSITE type=androidx.lifecycle.ViewModelStoreOwner? origin=DEFAULT_VALUE
                CONST Null type=androidx.lifecycle.ViewModelStoreOwner? value=null
              key: COMPOSITE type=kotlin.String? origin=DEFAULT_VALUE
                CONST Null type=kotlin.String? value=null
              extras: COMPOSITE type=androidx.lifecycle.viewmodel.CreationExtras? origin=DEFAULT_VALUE
                CONST Null type=androidx.lifecycle.viewmodel.CreationExtras? value=null
              scope: COMPOSITE type=org.koin.core.scope.Scope? origin=DEFAULT_VALUE
                CONST Null type=org.koin.core.scope.Scope? value=null
              parameters: COMPOSITE type=kotlin.Function0<org.koin.core.parameter.ParametersHolder>? origin=DEFAULT_VALUE
                CONST Null type=kotlin.Function0<org.koin.core.parameter.ParametersHolder>? value=null
              $mask0: CONST Int type=kotlin.Int value=63
              $handler: CONST Null type=kotlin.Any? value=null
    RETURN type=kotlin.Nothing from='public final fun ItemsScreenRoot$default (modifier: androidx.compose.ui.Modifier?, viewModel: com.sukajee.itemlist.presentation.ItemsViewModel?, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit declared in com.sukajee.itemlist.presentation.ItemsScreenKt'
      CALL 'public final fun ItemsScreenRoot (modifier: androidx.compose.ui.Modifier, viewModel: com.sukajee.itemlist.presentation.ItemsViewModel): kotlin.Unit declared in com.sukajee.itemlist.presentation.ItemsScreenKt' type=kotlin.Unit origin=DEFAULT_STUB_CALL_TO_IMPLEMENTATION
        modifier: TYPE_OP type=androidx.compose.ui.Modifier origin=IMPLICIT_CAST typeOperand=androidx.compose.ui.Modifier
          GET_VAR 'modifier: androidx.compose.ui.Modifier? [assignable] declared in com.sukajee.itemlist.presentation.ItemsScreenKt.ItemsScreenRoot$default' type=androidx.compose.ui.Modifier? origin=null
        viewModel: TYPE_OP type=com.sukajee.itemlist.presentation.ItemsViewModel origin=IMPLICIT_CAST typeOperand=com.sukajee.itemlist.presentation.ItemsViewModel
          GET_VAR 'viewModel: com.sukajee.itemlist.presentation.ItemsViewModel? [assignable] declared in com.sukajee.itemlist.presentation.ItemsScreenKt.ItemsScreenRoot$default' type=com.sukajee.itemlist.presentation.ItemsViewModel? origin=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:50)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:42)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:385)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:402)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:169)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:41)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt.makeIrFilePhase$lambda$5(PhaseBuilders.kt:114)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:71)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:62)
	... 43 more
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun koinViewModel$default <T> (qualifier: org.koin.core.qualifier.Qualifier?, viewModelStoreOwner: androidx.lifecycle.ViewModelStoreOwner?, key: kotlin.String?, extras: androidx.lifecycle.viewmodel.CreationExtras?, scope: org.koin.core.scope.Scope?, parameters: kotlin.Function0<org.koin.core.parameter.ParametersHolder>?, $mask0: kotlin.Int, $handler: kotlin.Any?): T of org.koin.compose.viewmodel.ViewModelKt.koinViewModel$default [inline] declared in org.koin.compose.viewmodel.ViewModelKt' type=T of org.koin.compose.viewmodel.ViewModelKt.koinViewModel$default origin=DEFAULT_DISPATCH_CALL
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:65)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:162)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:647)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitTypeOperator(ExpressionCodegen.kt:1121)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitTypeOperator(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrTypeOperatorCall.accept(IrTypeOperatorCall.kt:26)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitSetValue(ExpressionCodegen.kt:929)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitSetValue(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrSetValue.accept(IrSetValue.kt:21)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitWhen(ExpressionCodegen.kt:1095)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitWhen(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrWhen.accept(IrWhen.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:573)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:578)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:239)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:121)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:46)
	... 53 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Lorg/koin/compose/viewmodel/ViewModelKt;.koinViewModel$default(Lorg/koin/core/qualifier/Qualifier;Landroidx/lifecycle/ViewModelStoreOwner;Ljava/lang/String;Landroidx/lifecycle/viewmodel/CreationExtras;Lorg/koin/core/scope/Scope;Lkotlin/jvm/functions/Function0;ILjava/lang/Object;)Landroidx/lifecycle/ViewModel;
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:96)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:91)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.compileInline(InlineCodegen.kt:43)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:51)
	... 74 more


